// This file has been autogenerated from parsing an Objective-C header file added in Xcode.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using Steema.TeeChart;
using System.Drawing;

namespace TechDays2013
{
    public enum ChartType
    {
        Bar, Candle, Tower, Radar,Bubble
    }
	public partial class ChartDetail : UIViewController
	{
        public ChartType chart;
        public Int16 samples;
        TChart chartview;
		public ChartDetail (IntPtr handle) : base (handle)
		{
		}

        //處理晝面旋轉
        public override void WillAnimateRotation(UIInterfaceOrientation toInterfaceOrientation, double duration)
        {
            base.WillAnimateRotation(toInterfaceOrientation, duration);

            if (toInterfaceOrientation == UIInterfaceOrientation.LandscapeLeft || toInterfaceOrientation == UIInterfaceOrientation.LandscapeRight)
            {
                chartview.Frame = new RectangleF(0, 0, 460, 320);
            }
            else
            {
                chartview.Frame = new RectangleF(0, 0, 320, 460);
            }
        }


        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            chartview = new TChart();
            chartview.Frame = new RectangleF(0, 0, 320, 460);

            //產生不同類型的圖表
            switch (chart)
            { 
                case ChartType.Bar:
                    var Barstyle = new Steema.TeeChart.Styles.Bar();
                    Barstyle.FillSampleValues(samples);
                    Barstyle.ShowInLegend = false;
                    Barstyle.Marks.Visible = true;
                    chartview.Series.Add(Barstyle);  
                    break;

                case ChartType.Candle:
                    var Candlestyle = new Steema.TeeChart.Styles.Candle();
                    Candlestyle.FillSampleValues(samples);
                    Candlestyle.ShowInLegend = false;
                    Candlestyle.Marks.Visible = true;
                    chartview.Series.Add(Candlestyle);
                    break;
                    
                case ChartType.Bubble:
                    var Bubblestyle = new Steema.TeeChart.Styles.Bubble();
                    Bubblestyle.FillSampleValues(samples);
                    Bubblestyle.ShowInLegend = false;
                    Bubblestyle.Marks.Visible = true;
                    chartview.Series.Add(Bubblestyle);
                    break;

                case ChartType.Radar:
                    var Radarstyle = new Steema.TeeChart.Styles.Radar();
                    Radarstyle.FillSampleValues(samples);
                    Radarstyle.ShowInLegend = false;
                    Radarstyle.Marks.Visible = true;
                    chartview.Series.Add(Radarstyle);
                    break;

                case ChartType.Tower:
                    var Towerstyle = new Steema.TeeChart.Styles.Tower();
                    Towerstyle.FillSampleValues(samples);
                    Towerstyle.ShowInLegend = false;
                    Towerstyle.Marks.Visible = true;
                    chartview.Series.Add(Towerstyle);
                    break;
            }
            View.AddSubview(chartview);
        }
	}
}
